这是一个基于 GitHub 的图床管理项目，整体分为两个独立的 Git 仓库：

---

【1】photo-bed（图床仓库）：
- 仅用于存储图片文件，作为静态资源托管；
- 仓库目录结构如下：
  - `images/`：图片（重命名后的文件，包含 hash）, 包括原图与略缩图；
    - 缩略图，默认统一生成宽度 320px，具体遵从 env 配置；
    - 上传图片原图命名为 filename.<hash>.(type),
    - 生成略缩图图片命名为 filename.thumb.<hash>.(type)
- 文件会通过 GitHub Action 自动推送到该仓库，并通过 jsDelivr 或其他 CDN 服务访问；
- 不包含任何脚本或代码，仅为纯静态资源仓库。

---

【2】photo-manager（图床管理仓库）：
- 包含图片上传脚本、记录生成、图像处理、前端管理界面等；
- 核心目录结构：
  - `scripts/`：golang 代码文件，例如上传处理（生成 hash、创建缩略图、更新记录文件）；
  - `records/`：按年月分类的 JSON 文件，用于存储图片上传记录；
  - `frontend/`：基于 Vue3 构建的前端页面，用于管理和展示图床内容；
  - `.github/workflows/`：自动化构建与同步配置；
- 核心功能包括：
  - 命令行上传支持简洁参数结构：
    - 示例：`$ pic-go demo.jpg tags:城市 desc:夜景`
  - 自动跳过重复图片（基于 hash）；
  - 同步图片至 photo-bed；
  - 更新记录至本地 JSON 文件；
  - 支持生成缩略图、统计标签、搜索图片等功能。

---

你的任务是基于上述结构：
- 编写高质量的 golang 脚本或前端组件；
- 生成与模块职责一致的文件结构或文档说明；
- 保持仓库职责单一，避免混用或结构混乱；
- 所有代码应风格统一、模块清晰、逻辑可维护。
